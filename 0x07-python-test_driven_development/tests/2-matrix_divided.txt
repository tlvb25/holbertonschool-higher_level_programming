The ``2-matrix_divided`` module
======================

Using ``matrix_divided``
-------------------

This is an example text file in reStructuredText format.  First import
``matrix_divided`` from the ``2-matrix_divided`` module:

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Now use it:
    >>> matrix_divided([[8, 8], [8, 8]], "Holberton")
    Traceback (most recent call last):
    TypeError: div must be a number

    >>> matrix_divided("Holberton", 8)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[8, 8], [8, 8]], 0)
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

    >>> matrix_divided([[8, 8], [8, 8]], -4)
    [[-2.0, -2.0, -2.0, -2.0], [-2.0, -2.0, -2.0, -2.0]]

    >>> matrix_divided([[8, 8], [8, 8]], float('inf'))
    [[0.0, 0.0], [0.0, 0.0]]

    >>> matrix = [[8, 8, 8], [8, 8, 8]]
    >>> matrix_divided(matrix, 4)
    [[2.0, 2.0, 2.0, 2.0, 2.0, 2.0], [2.0, 2.0, 2.0, 2.0, 2.0, 2.0]]
    >>> print(matrix)
    [[8, 8, 8], [8, 8, 8]]

    >>> matrix_divided([[8, 4, 8], [4, 8, 8]], 4)
    [[2.0, 1.0, 2.0, 1.0, 2.0, 2.0], [2.0, 1.0, 2.0, 1.0, 2.0, 2.0]]

    >>> matrix_divided([["Holberton", "School"], [8, 8,]], 4)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[8, 4, 8], [8, 8]], 4)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size
